{"version":3,"sources":["app.js","filters.js","controllers.js","resources.js","services.js","validation.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function () {\n\t'use stric';\n\n\tangular.module('SATCI', \n\t[\n\t\t// 'ngRoute',\n\t\t'ngAnimate',\n\t\t'ngResource',\n\t\t'ui.bootstrap',\n\t\t'ui.router',\n    'satellizer',\n    'smart-table',\n    'angular-loading-bar',\n\t\t// '',\n\t\t'SATCI.controllers',\n\t\t'SATCI.services',\n\t\t'SATCI.resources',\n\t\t'SATCI.filters',\n\t\t\n\t])\n  .constant('PathTemplates', {\n    views:    'templates/views/',\n    partials: 'templates/partials/',\n   })\n\t// .config(['$routeProvider', '$locationProvider', '$httpProvider', function ($routeProvider, $locationProvider, $httpProvider)\n\t.config(function (\n    $authProvider, $stateProvider, $urlRouterProvider, $locationProvider, $httpProvider, PathTemplates\n    ){\n    // Push the new factory onto the $http interceptor array\n    $httpProvider.interceptors.push('redirectWhenLoggedOut');\n\n\t\t$authProvider.loginUrl = \"/api/auth/login\";\n    // $authProvider.signupUrl = \"http://api.com/auth/signup\";\n    $authProvider.tokenName = \"token\";\n    $authProvider.tokenPrefix = \"SATCI\";\n    $authProvider.storageType = 'sessionStorage'\n\n\t\t$urlRouterProvider.otherwise('/auth/login');\n\n\t\t$stateProvider\n\t\t\t.state('login', {\n\t\t\t\turl: '/auth/login',\n\t\t\t\ttemplateUrl: PathTemplates.views + 'auth/login.html',\n\t\t\t\tcontroller: 'LoginCtrl'\n\t\t\t})\n\n\t\t\t.state('home', {\n\t\t\t\turl: '/home',\n\t\t\t\ttemplateUrl: PathTemplates.views + 'home/index.html'\n\t\t\t})\n\n\t\t\t.state('solicitude', {\n\t\t\t\turl: '/solicitude',\n\t\t\t\ttemplateUrl: PathTemplates.views + 'solicitude/index.html',\n\t\t\t\tcontroller: 'SolicitudeCtrl'\n\t\t\t})\n\t\t\t.state('solicitude.create', {\n\t\t\t\turl: '/create',\n\t\t\t\ttemplateUrl: PathTemplates.views + 'solicitude/create.html',\n\t\t\t\tcontroller: 'CreateSolicitudeCtrl'\n\t\t\t})\n\t\t\t.state('solicitude.edit', {\n\t\t\t\turl: '/edit/:id',\n\t\t\t\ttemplateUrl: PathTemplates.views + 'solicitude/index.html',\n\t\t\t\tcontroller: 'SolicitudeCtrl'\n\t\t\t})\n\n\n\t\t$httpProvider.interceptors.push('redirectWhenLoggedOut');\n\n\t\t$locationProvider.html5Mode(true);\n\n\t})\n\t.run(function($rootScope, $state) {\n    // $stateChangeStart is fired whenever the state changes. We can use some parameters\n    // such as toState to hook into details about the state as it is changing\n    $rootScope.$on('$stateChangeStart', function(event, toState) {\n      // Grab the user from local storage and parse it to an object\n      var user = JSON.parse(sessionStorage.getItem('user'));      \n      // If there is any user data in local storage then the user is quite\n      // likely authenticated. If their token is expired, or if they are\n      // otherwise not actually authenticated, they will be redirected to\n      // the auth state because of the rejected request anyway\n      if(user) {\n        // The user's authenticated state gets flipped to\n        // true so we can now show parts of the UI that rely\n        // on the user being logged in\n        $rootScope.authenticated = true;\n        // Putting the user's data on $rootScope allows\n        // us to access it anywhere across the app. Here\n        // we are grabbing what is in local storage\n        $rootScope.currentUser = user;\n        // If the user is logged in and we hit the auth route we don't need\n        // to stay there and can send the user to the main state\n        if(toState.name === \"login\") {\n          // Preventing the default behavior allows us to use $state.go\n          // to change states\n          event.preventDefault();\n          // go to the \"main\" state which in our case is users\n          $state.go('home');\n        }\n      }\n    });\n\n  });\n\n})();","(function () {\n\t'use stric';\n\n\tangular.module('SATCI.filters', [])\n\n\t.filter(\"capitalize\", function(){\n\t\treturn function (text) {\n\t\t\tif(text != null){\n\t\t\t\treturn text.substring(0,1).toUpperCase()+text.substring(1);\n\t\t\t}\n\t\t}\n\t})\n\n\t.filter('translateApplicant', function () {\n\t\treturn function (applicant) {\n\t\t\tif(applicant != null) {\n\t\t\t\tif (applicant === 'citizen') {\n\t\t\t\t\treturn 'Natural';\n\t\t\t\t}\n\t\t\t\tif (applicant === 'institution') {\n\t\t\t\t\treturn 'Jurídico';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\t.filter('indentification', function () {\n\t\treturn function (applicant) {\n\t\t\tif(applicant != null) {\n\t\t\t\tif (applicant === 'citizen') {\n\t\t\t\t\treturn 'Cédula';\n\t\t\t\t}\n\t\t\t\tif (applicant === 'institution') {\n\t\t\t\t\treturn 'RIF';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\n})();","(function () {\n\t'use stric';\n\t\n\tangular.module('SATCI.controllers',[])\n\t.controller('LoginCtrl', function ($auth, $state, $http, $scope, $rootScope) {\n\t\t\n\t\t$scope.loginError = false;\n\t\t$scope.loginErrorText;\n\n\t\t$scope.login = function(){\n\t\t\tvar credentials = {\n\t\t\t\tusername: $scope.username,\n\t\t\t\tpassword: $scope.password\n\t\t\t}\n      // Use Satellizer's $auth service to login\n      $auth.login(credentials).then(function() {\n    \t  // If login is successful, redirect to the users state\n  \t    // $state.go('home', {});\n\t      // Return an $http request for the now authenticated\n      \t// user so that we can flatten the promise chain\n      \treturn $http.get('/api/auth/user');\n      }, function(error) {\n      \t$rootScope.loginError = true;\n      \t$rootScope.loginErrorText = error.data.error;\n\n      \t// Because we returned the $http.get request in the $auth.login\n      \t// promise, we can chain the next promise to the end here\n      }).then(function(response) {\n      \t// Stringify the returned data to prepare it\n      \t// to go into local storage\n      \tvar user = JSON.stringify(response.data.user);\n      \t// Set the stringified user data into local storage\n      \tsessionStorage.setItem('user', user);\n      \t// The user's authenticated state gets flipped to\n      \t// true so we can now show parts of the UI that rely\n      \t// on the user being logged in\n      \t$rootScope.authenticated = true;\n      \t// Putting the user's data on $rootScope allows\n      \t// us to access it anywhere across the app\n      \t$rootScope.currentUser = response.data.user;\n  \t    // Everything worked out so we can now redirect to\n    \t  // the users state to view the data\n    \t  $state.go('home');\n    \t});\n    }\n  })\n\n.controller('NavCtrl', function ($auth, $state, $scope, $rootScope) {\n\t$scope.logout = function() {\n\t\t//Remove the satellizer_token from localstorage\n\t\t$auth.logout().then(function(){\n\t\t\t//Remove the authenticated user from local storage\n\t\t\tsessionStorage.removeItem('user');\n\t\t\t//Flip authenticated to false so that we no longer\n\t\t\t//show UI elements dependant on the user being logged in\n\t\t\t$rootScope.authenticated = false;\n\t\t\t//Remove the current user from rootscope\n\t\t\t$rootScope.currentUser = null;\n\t\t\t$state.go('login');\n\t\t});\n\t}\n})\n\n.controller('SidebarCtrl', ['$scope', '$location', function ($scope, $location) {\n\t$scope.navClass = function (page) {\n\t\tvar currentRoute;\n\t\tvar path = $location.path().substring(1) || 'home';\n\t\tvar stop = path.search('/');\n\t\tif (stop > 0) {\n\t\t\tcurrentRoute = path.substr(0,stop);\n\t\t}else {\n\t\t\tcurrentRoute = path;\n\t\t}\n\t\treturn page === currentRoute ? 'active' : '';\n\t};\n}])\n\n.controller('DropdownCtrl', function($scope){\n\n\t$scope.navbarCollapsed = true;\n\n\t$scope.status = {\n\t\tisOpen: false\n\t};\n\n\t$scope.toggleDropdown  = function ($event) {\n\n\t\t$event.preventDefault();\n\t\t$event.stopPropagation();\n\n\t\t$scope.status.isOpen = !$scope.status.isOpen;\n\n\t};\n})\n\n.controller('DatepickerCtrl', function ($scope) {\n\t$scope.today = function() {\n\t\t$scope.dt = new Date();\n\t};\n\t\t// $scope.today();\n\n\t\t$scope.clear = function () {\n\t\t\t$scope.dt = null;\n\t\t};\n\n\t\t// Disable weekend selection\n\t\t$scope.disabled = function(date, mode) {\n\t\t\treturn ( mode === 'day' && ( date.getDay() === 0 || date.getDay() === 6 ) );\n\t\t};\n\n\t\t$scope.toggleMin = function() {\n\t\t\t// $scope.minDate = $scope.minDate ? null : new Date();\n\t\t\tvar date = new Date();\n\t\t\t$scope.minDate = date.getFullYear() + '-01-02'\n\t\t};\n\t\t$scope.toggleMin();\n\t\t\n\t\t$scope.toggleMax = function() {\n\t\t\t$scope.maxDate = $scope.maxDate ? null : new Date();\n\t\t};\n\t\t$scope.toggleMax();\n\n\t\t$scope.open = function($event) {\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\n\t\t\t$scope.opened = !$scope.opened;\n\t\t};\n\n\t\t$scope.dateOptions = {\n\t\t\tformatYear: 'yy',\n\t\t\tstartingDay: 1\n\t\t};\n\n\t\t$scope.formats = ['dd-MMMM-yyyy', 'dd/MM/yyyy', 'dd.MM.yyyy', 'shortDate'];\n\t\t$scope.format = $scope.formats[0];\n\n\t\tvar tomorrow = new Date();\n\t\ttomorrow.setDate(tomorrow.getDate() + 1);\n\t\tvar afterTomorrow = new Date();\n\t\tafterTomorrow.setDate(tomorrow.getDate() + 2);\n\t\t$scope.events =\n\t\t[\n\t\t{\n\t\t\tdate: tomorrow,\n\t\t\tstatus: 'full'\n\t\t},\n\t\t{\n\t\t\tdate: afterTomorrow,\n\t\t\tstatus: 'partially'\n\t\t}\n\t\t];\n\n\t\t$scope.getDayClass = function(date, mode) {\n\t\t\tif (mode === 'day') {\n\t\t\t\tvar dayToCheck = new Date(date).setHours(0,0,0,0);\n\n\t\t\t\tfor (var i=0;i<$scope.events.length;i++){\n\t\t\t\t\tvar currentDay = new Date($scope.events[i].date).setHours(0,0,0,0);\n\n\t\t\t\t\tif (dayToCheck === currentDay) {\n\t\t\t\t\t\treturn $scope.events[i].status;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t};\n\t})\n\n.controller('SolicitudeCtrl', ['$scope', 'Solicitudes', function ($scope, Solicitudes) {\n\t\t\t/*Solicitudes.get(function (data){\n\t\t\t\t$scope.solicitudes = data.solicitudes;\n\t\t\t});*/\n}])\n\n.controller('CreateSolicitudeCtrl', \n\t['$scope', '$controller', 'Citizens', 'Institutions', 'Parishes', 'paginateService', \n\tfunction ($scope, $controller, Citizens, Institutions, Parishes, paginateService) {\n\n\t\t$controller('CreateCitizenCtrl', {$scope : $scope});\n\t\t$controller('CreateInstitutionCtrl', {$scope : $scope});\n\t\t\n\t\tvar add = null;\n\t\tvar search = null;\n\t\tvar applicantType = '';\n\n\t\t$scope.full_name = null;\n\t\t$scope.applicantId = null;\n\t\t$scope.identification = null;\n\t\t$scope.solicitude = {\n\t\t\talerts: [],\n\t\t}\n\n\t\t$scope.addApplicant = function (){\n\t\t\tadd = true;\n\t\t\tsearch = false;\n\n\t\t\t$scope.full_name = null;\n\t\t\t$scope.applicantId = null;\n\t\t\t$scope.identification = null;\n\n\t\t\t$scope.applicantTemplate = 'templates/partials/applicant/'+ applicantType +'-form.html';\n\t\t};\n\n\t\t$scope.clear = function (){\n\t\t\t$scope.identification = null;\n\t\t\t$scope.full_name = null;\n\t\t\t$scope.applicantId = null;\n\t\t\t$scope.template = null;\n\t\t\t$scope.applicantType = null;\n\t\t\t$scope.applicantTemplate = null;\n\t\t}\n\n\t\t$scope.close = function (){\n\t\t\tadd = null;\n\t\t\tsearch = null\n\t\t\t$scope.template = '';\n\t\t\t$scope.applicant = false;\n\t\t\t$scope.applicantTemplate = '';\n\t\t};\n\n\t\t$scope.closeAlertSolicitude = function(index) {\n\t\t\t$scope.solicitude.alerts.splice(index, 1);\n\t\t};\n\n\t\t$scope.getApplicant = function (type){\n\t\t\t$scope.applicantType = applicantType = type;\n\t\t\t$scope.template = 'templates/partials/solicitude/applicant.html';\n\t\t};\n\n\t\t$scope.parishes = Parishes.get(function (data) {\n\t\t\treturn $scope.parishes = data.parishes;\n\t\t})\n\n\t\t$scope.searchApplicant = function (){\n\t\t\tsearch = true;\n\t\t\tadd = false;\n\n\t\t\tif (applicantType === 'citizen') {\n\t\t\t\tCitizens.get(function (data) {\n\t\t\t\t\t$scope.applicants = data.citizens;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (applicantType === 'institution') {\n\t\t\t\tInstitutions.get(function (data) {\n\t\t\t\t\t$scope.applicants = data.institutions;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.applicantTemplate = 'templates/partials/solicitude/search-applicant.html';\n\t\t};\n\n\t\t$scope.selectApplicant = function (id, identification, full_name) {\n\t\t\t$scope.full_name = full_name;\n\t\t\t$scope.applicantId = id;\n\t\t\t$scope.identification = identification;\n\t\t};\n\n\t\t$scope.$watch('applicantType', function () {\n\t\t\tif (add) {\n\t\t\t\t$scope.addApplicant();\n\t\t\t}\n\t\t\tif (search) {\n\t\t\t\t$scope.applicantTemplate = '';\n\t\t\t\t// $scope.searchApplicant();\n\t\t\t}\n\t\t});\n\n\t\t$scope.displayed = [];\n\n\t\t$scope.callServer = function callServer (tableState) {\n\n\t\t\t$scope.isLoading = true;\n\t\t\tvar pagination = tableState.pagination;\n\t\t\t// $scope.DisplayedPages = 1;\n\n\t\t\tvar start = pagination.start || 0;     // This is NOT the page number, but the index of item in the list that you want to use to display the table.\n\t\t\tvar number = pagination.number || 10;  // Number of entries showed per page.\n\n\t\t\tpaginateService.getPage($scope.applicants, start, number, tableState).then(function (result) {\n\t\t\t\t\n\t\t\t\t$scope.displayed = result.data;\n\t\t\t\ttableState.pagination.numberOfPages = result.numberOfPages;//set the number of pages so the pagination can update\n\t\t\t\t$scope.isLoading = false;\n\n\t\t\t});\n\t\t};\n\t}])\n\n.controller('CreateCitizenCtrl', ['$scope', 'Citizens', function ($scope, Citizens) {\n\t$scope.applicant = {\n\t\talerts: [],\n\t}\n\n\t$scope.citizen = {\n\t\tidentification: '',\n\t\tfirst_name: '',\n\t\tlast_name: '',\n\t\taddress: '',\n\t\tprefix_phone: '',\n\t\tnumber_phone: '',\n\t\tparish: ''\n\t};\n\n\t$scope.closeAlertApplicant = function(index) {\n\t\t$scope.applicant.alerts.splice(index, 1);\n\t};\n\n\t$scope.saveCitizen = function (){\n\t\t$scope.applicant = {\n\t\t\talerts: [],\n\t\t}\n\t\t$scope.citizen.full_name = $scope.citizen.first_name +' '+ $scope.citizen.last_name;\n\t\t$scope.citizen.parish_id = $scope.citizen.parish.id;\n\t\tdelete $scope.citizen.parish;\n\n\t\tCitizens.save($scope.citizen).$promise.then(\n\t\t\tfunction (data) {\n\t\t\t\tif (data.success) {\n\t\t\t\t\t$scope.full_name = $scope.citizen.first_name +' '+ $scope.citizen.last_name;\n\t\t\t\t\t$scope.identification = $scope.citizen.identification;\n\t\t\t\t\t$scope.applicantId = data.citizen.id;\n\t\t\t\t\t$scope.solicitude.alerts = [{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmessage: 'Persona registrada exitosamente',\n\t\t\t\t\t}];\n\t\t\t\t\t$scope.close();\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (fails) {\n\t\t\t\tangular.forEach(fails.data, function(values, key) {\n\t\t\t\t\tangular.forEach(values, function(value){\n\t\t\t\t\t\t$scope.applicant.alerts.push({type: 'danger', message: value})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t}\n}])\n\n.controller('CreateInstitutionCtrl', ['$scope', 'Institutions',\tfunction ($scope, Institutions) {\n\t$scope.applicant = {\n\t\talerts: [],\n\t}\n\n\t$scope.institution = {\n\t\tidentification: '',\n\t\tfull_name: '',\n\t\taddress: '',\n\t\tprefix_phone: '',\n\t\tnumber_phone: '',\n\t\tparish: '',\n\t\tagent_identification: '',\n\t\tagent_first_name: '',\n\t\tagent_last_name: ''\n\t};\n\n\t$scope.closeAlertApplicant = function(index) {\n\t\t$scope.applicant.alerts.splice(index, 1);\n\t};\n\n\t$scope.saveInstitution = function (){\n\t\t$scope.applicant = {\n\t\t\talerts: [],\n\t\t}\n\t\t$scope.full_name = $scope.institution.full_name;\n\t\t$scope.identification = $scope.institution.identification.toUpperCase();\n\t\t$scope.applicantId = $scope.institution.identification;\n\n\t\tInstitutions.save($scope.institution).$promise.then(\n\t\t\tfunction (data) {\n\t\t\t\tif (data.success) {\n\t\t\t\t\t$scope.full_name = $scope.institution.full_name;\n\t\t\t\t\t$scope.identification = $scope.institution.identification;\n\t\t\t\t\t$scope.applicantId = data.institution.id;\n\t\t\t\t\t$scope.solicitude.alerts = [{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmessage: 'Institución registrada exitosamente',\n\t\t\t\t\t}];\n\t\t\t\t\t$scope.close();\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (fails) {\n\t\t\t\tangular.forEach(fails.data, function(values, key) {\n\t\t\t\t\tangular.forEach(values, function(value){\n\t\t\t\t\t\t$scope.applicant.alerts.push({type: 'danger', message: value})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t}\n}])\n\n\n})();","(function () {\n\t'use stric';\n\t\n\tvar resourceUrl = '/api/';\n\t// var resourceUrl = 'http://localhost/satci/public/api/';\n\t// var resourceUrl = 'http://192.168.1.26/satci/public/api/';\n\t// var resourceUrl = 'http://192.168.0.103/satci/public/api/';\n\t\n\tangular.module('SATCI.resources', ['ngResource'])\n\n\n\t.factory('Solicitudes', function ($resource){\n\t\treturn $resource( resourceUrl +'solicitude/:id', {id: '@_id'}, {\n\t\t\tupdate: {method: 'PUT', params: {id: '@_id'}}\n\t\t});\n\t})\n\n\t.factory('Citizens', function ($resource){\n\t\treturn $resource( resourceUrl + 'citizen/:id', {id: '@_id'}, {\n\t\t\tupdate: {method: 'PUT', params: {id: '@_id'}}\n\t\t});\n\t})\n\n\t.factory('Institutions', function ($resource){\n\t\treturn $resource( resourceUrl + 'institution/:id', {id: '@_id'}, {\n\t\t\tupdate: {method: 'PUT', params: {id: '@_id'}}\n\t\t});\n\t})\n\n\t.factory('Parishes', function ($resource){\n\t\treturn $resource( resourceUrl + 'parish/:id', {id: '@_id'}, {\n\t\t\tupdate: {method: 'PUT', params: {id: '@_id'}}\n\t\t});\n\t})\n\n})();","(function () {\n\t'use stric';\n\t\n\tangular.module('SATCI.services', [])\n\n\t.factory('servingData', function () {\n\t\treturn {\n\t\t\tdata: {}\n\t\t};\n\t})\n\n\t.factory('redirectWhenLoggedOut', function($q, $injector, $rootScope) {\n\t\treturn {\n\t\t\tresponseError: function(rejection) {\n\t      // Need to use $injector.get to bring in $state or else we get\n\t      // a circular dependency error\n\t      var $state = $injector.get('$state');\n\t      // Instead of checking for a status code of 400 which might be used\n\t      // for other reasons in Laravel, we check for the specific rejection\n\t      // reasons to tell us if we need to redirect to the login state\n\t      var rejectionReasons = ['token_not_provided', 'token_expired', 'token_absent', 'token_invalid', 'user_not_found'];\n\t      // Loop through each rejection reason and redirect to the login\n\t      // state if one is encountered\n\t      angular.forEach(rejectionReasons, function(value, key) {\n\t      \tif(rejection.data.error === value) {\n\t          // If we get a rejection corresponding to one of the reasons\n\t          // in our array, we know we need to authenticate the user so \n\t          // we can remove the current user from local storage\n\t          sessionStorage.removeItem('user');\n\t          $rootScope.authenticated = false;\n\t\t\t\t\t\t$rootScope.currentUser = null;\n\t          // Send the user to the auth state so they can login\n\t          $state.go('login');\n\t        }\n\t      });\n\t      return $q.reject(rejection);\n\t    }\n\t  }\n\t})\n\n.factory('paginateService', ['$q', '$filter', '$timeout', function ($q, $filter, $timeout) {\n\n\tfunction getPage(data, start, number, params) {\n\n\t\tvar deferred = $q.defer();\n\n\t\tvar filtered = params.search.predicateObject ? $filter('filter')(data, params.search.predicateObject) : data;\n\n\t\tif (params.sort.predicate) {\n\t\t\tfiltered = $filter('orderBy')(filtered, params.sort.predicate, params.sort.reverse);\n\t\t}\n\n\t\tvar result = filtered.slice(start, start + number);\n\t\t$timeout(function () {\n\t\t\tdeferred.resolve({\n\t\t\t\tdata: result,\n\t\t\t\t// numberOfPages: (number )\n\t\t\t\tnumberOfPages: Math.ceil(data.length / number)\n\t\t\t});\n\t\t}, 600);\n\n\t\treturn deferred.promise;\n\t}\n\n\treturn {\n\t\tgetPage: getPage\n\t};\n\n}])\n\n})();","function onlyLetters(e){\n\tkey = e.keyCode || e.which;\n\ttecla = String.fromCharCode(key).toLowerCase();\n\tletras = \" áéíóúüabcdefghijklmnñopqrstuvwxyz\";\n\tespeciales = [8,37,39,46];\n\ttecla_especial = false\n\tfor(var i in especiales){\n\t\tif(key == especiales[i]){\n\t\t\ttecla_especial = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(letras.indexOf(tecla)==-1 && !tecla_especial){\n\t\treturn false;\n\t}\n}\n\nfunction onlyNumbers(e){\n\tkey = e.keyCode || e.which;\n\ttecla = String.fromCharCode(key).toLowerCase();\n\tnum = \"0123456789\";\n\tespeciales = [8,37,39,46];\n\ttecla_especial = false\n\tfor(var i in especiales){\n\t\tif(key == especiales[i]){\n\t\t\ttecla_especial = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(num.indexOf(tecla)==-1 && !tecla_especial){\n\t\treturn false;\n\t}\n}\n\nfunction onlyClear(e){\n\tkey = e.keyCode || e.which;\n\ttecla = String.fromCharCode(key).toLowerCase();\n\tnum = \"\";\n\tespeciales = [8,13,];\n\ttecla_especial = false\n\tfor(var i in especiales){\n\t\tif(key == especiales[i]){\n\t\t\ttecla_especial = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(num.indexOf(tecla)==-1 && !tecla_especial){\n\t\treturn false;\n\t}\n}\n\nfunction noKey (e){\n\treturn false;\n}\n// Forma de Uso: onkeyup=\"cedulaMask(this)\"\nfunction cedulaMask (input){\n\t// var number = new String(input.value);\n\t// number = number.replace(/\\./g,''); //quita todos los puntos de la cadena\n\t// var result = '';\n\t// while( number.length > 3 ){\n\t// \tresult = '.' + number.substr(number.length - 3) + result;\n\t// \tnumber = number.substring(0, number.length - 3);\n\t// }\n\t// result = number + result;\n\t// input.value = result;\n\n\n\n\tvar num = input.value.replace(/\\./g,'');\n\tif(!isNaN(num)){\n\t\tnum = num.toString().split('').reverse().join('').replace(/(?=\\d*\\.?)(\\d{3})/g,'$1.');\n\t\tnum = num.split('').reverse().join('').replace(/^[\\.]/,'');\n\t\tinput.value = num;\n\t}\n\t// else{\n\t\t// alert('Solo se permiten numeros');\n\t\t// input.value = input.value.replace(/[^\\d\\.]*/g,'');\n\t// }\n}\n\nfunction solicitudeNumberMask (input, e) {\n\tvar key = e.which || e.keyCode;\n\tvar input = input.value;\n\t\n\tif (key == 45 && (input.length === 3)) {\n\t\treturn true;\n\t}\n\tif (key >= 48 && key <= 57 && (input.length >= 0 && input.length <= 2) || (input.length >= 4 && input.length <= 6)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction rifMask (input, e){\n\tvar key = e.which || e.keyCode;\n\tvar input = input.value;\n\n\t/*\n\t\t69 = E, 101 = e, 71 = G, 103 = g, 73 = I, 105 = i\n\t\t74 = J, 106 = j, 77 = M, 109 = m, 80 = P, 112 = p\n\t\t82 = R, 114 = r, 86 = V, 118 = v\n\t\t*/\n\t\tif (((key == 69 || key == 101) || (key == 71 || key == 103) || (key == 73 || key == 105) || \n\t\t\t(key == 74 || key == 106) || (key == 77 || key == 109) || (key == 80 || key == 112) ||\n\t\t\t(key == 82 || key == 114) ||\t(key == 86 || key == 118)) && input.length === 0 ) {\n\t\t\treturn true;\n\t}\n\tif (key == 45 && (input.length === 1 || input.length === 10)) {\n\t\treturn true;\n\t}\n\tif (key >= 48 && key <= 57 && (input.length >= 2 && input.length <= 9) || input.length === 11) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n"],"sourceRoot":"/source/"}